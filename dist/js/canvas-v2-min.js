/*! 
 * canvas-v2.js 0.0.1 - 2022-02-10
 * Copyright (c) 2022 omar-sedki; Licensed MIT
 */
CanvasRenderingContext2D.prototype.originalRect=CanvasRenderingContext2D.prototype.rect,CanvasRenderingContext2D.prototype.originalArc=CanvasRenderingContext2D.prototype.arc,CanvasRenderingContext2D.prototype.originalMoveTo=CanvasRenderingContext2D.prototype.moveTo,CanvasRenderingContext2D.prototype.originalBeginPath=CanvasRenderingContext2D.prototype.beginPath,CanvasRenderingContext2D.prototype.originalLineTo=CanvasRenderingContext2D.prototype.lineTo,CanvasRenderingContext2D.prototype.originalClosePath=CanvasRenderingContext2D.prototype.closePath,CanvasRenderingContext2D.prototype.originalArcTo=CanvasRenderingContext2D.prototype.arcTo;class shape2D{constructor(t,n){this.points=t,this.options=n}borderRadius(t){let n=this.options&&this.options.borderRadius?this.options.borderRadius:0;return"number"==typeof n?n:"object"==typeof n&&n.length==this.points.length?n[t]:0}createPath(t){t.beginPath();for(let n=0;n<this.points.length;n++){let i=0==n?this.points.length-1:n-1,e=n==this.points.length-1?0:n+1,o=n==this.points.length-1||n==this.points.length-2?n-this.points.length+2:n+2,s=0==n||1==n?n+this.points.length-2:n-2,r=new line({x:this.points[n].x,y:this.points[n].y},{x:this.points[e].x,y:this.points[e].y}),a=new line({x:this.points[n].x,y:this.points[n].y},{x:this.points[i].x,y:this.points[i].y}),h=new angle(this.points[i],this.points[n],this.points[e]).rad,p=new angle(this.points[n],this.points[e],this.points[o]).rad,l=new angle(this.points[s],this.points[i],this.points[n]).rad,g=this.borderRadius(n),c=this.borderRadius(n)/Math.tan(h/2),y=this.borderRadius(e)/Math.tan(p/2),x=this.borderRadius(i)/Math.tan(l/2);const d={nextPoint:y/r.length(),prevPoint:x/a.length(),point:c/r.length(),pointInPrevLine:c/a.length(),line:(y+c)/r.length(),prevLine:(x+c)/a.length()};if(d.line>1||d.prevLine>1){let t;d.line>1&&(t=c/d.line),d.prevLine>d.line&&(t=c/d.prevLine),console.log(d),console.log("before"+c),c=t,console.log("after"+c)}let C=a.getPointOnLineDistanceFrom("A",c),u=r.getPointOnLineDistanceFrom("A",c),v=r.getPointOnLineDistanceFrom("B",y);0==n&&t.originalMoveTo(C.x,C.y),t.originalArcTo(this.points[n].x,this.points[n].y,u.x,u.y,g),t.originalLineTo(v.x,v.y)}t.closePath()}}class point{constructor(t,n){this.x=t,this.y=n}}class line{constructor(t,n){this.pointA=t,this.pointB=n}length(){return Math.sqrt(Math.pow(this.pointA.x-this.pointB.x,2)+Math.pow(this.pointA.y-this.pointB.y,2),2)}getPointOnLineDistanceFrom(t,n){let i={};return i.x=(this.pointB.x-this.pointA.x)*n/this.length(),i.y=(this.pointB.y-this.pointA.y)*n/this.length(),"A"==t&&(i.x=this.pointA.x+i.x,i.y=this.pointA.y+i.y),"B"==t&&(i.x=this.pointB.x-i.x,i.y=this.pointB.y-i.y),i}}class angle{constructor(t,n,i){this.pointA=t,this.pointB=n,this.pointC=i,this.calculate()}calculate(){const t=this.pointA.x-this.pointB.x,n=this.pointA.y-this.pointB.y,i=this.pointC.x-this.pointB.x,e=this.pointC.y-this.pointB.y;let o=Math.atan2(t*e-n*i,t*i+n*e);o<0&&(o*=-1),this.rad=o,this.degree=180*o/Math.PI}}function percentToNumber(t,n){return"string"==typeof t&&/\s*(\d+(?:\.\d+)?)\s*%\s*/.test(t)&&(t=Number(RegExp.$1)*n/100),t}const roundCorner=(t,n,i,e)=>{t.originalMoveTo(n.x,n.y),t.originalLineTo(i.x,i.y),t.originalLineTo(e.x,e.y)};CanvasRenderingContext2D.prototype.lineTo=function(t,n){this.originalLineTo(t,n),this._lastPoint={x:t,y:n}},CanvasRenderingContext2D.prototype.moveTo=function(t,n){this.originalMoveTo(t,n),this._lastPoint={x:t,y:n}},CanvasRenderingContext2D.prototype.square=function(t,n,i,e){t=percentToNumber(t,this.canvas.width),n=percentToNumber(n,this.canvas.height),i=percentToNumber(i,this.canvas.width);const o=[];o.push({x:t,y:n}),o.push({x:t+i,y:n}),o.push({x:t+i,y:n+i}),o.push({x:t,y:n+i}),new shape2D(o,e).createPath(this)},CanvasRenderingContext2D.prototype.triangle=function(t,n,i,e){triangle=new shape2D([t,n,i],e),triangle.createPath(this)},CanvasRenderingContext2D.prototype.rect=function(t,n,i,e,o){if(t=percentToNumber(t,this.canvas.width),n=percentToNumber(n,this.canvas.height),i=percentToNumber(i,this.canvas.width),e=percentToNumber(e,this.canvas.height),o){var s=o.borderRadius?o.borderRadius:0,r={x:t,y:n},a={x:t+i,y:n},h={x:t+i,y:n+e},p={x:t,y:n+e};"number"==typeof s&&(r.r=s,a.r=s,h.r=s,p.r=s),"object"==typeof s&&2==s.length&&(r.r=s[0],a.r=s[1],h.r=s[0],p.r=s[1]),"object"==typeof s&&3==s.length&&(r.r=s[0],a.r=s[1],h.r=s[2],p.r=s[1]),"object"==typeof s&&4==s.length&&(r.r=s[0],a.r=s[1],h.r=s[2],p.r=s[3]);var l=ctx.lineCap;this.lineCap="square",this.originalMoveTo(r.x+r.r,r.y),this.originalLineTo(a.x-a.r,a.y),this.originalArcTo(a.x,a.y,a.x,a.y+a.r,a.r),this.originalLineTo(h.x,h.y-h.r),this.originalArcTo(h.x,h.y,h.x-h.r,h.y,h.r),this.originalLineTo(p.x+p.r,p.y),this.originalArcTo(p.x,p.y,p.x,p.y-p.r,p.r),this.originalLineTo(r.x,r.y+r.r),this.originalArcTo(r.x,r.y,r.x+r.r,r.y,r.r),this.lineCap=l}else this.originalRect(t,n,i,e)},CanvasRenderingContext2D.prototype.circle=function(t,n,i){t=percentToNumber(t,this.canvas.width),n=percentToNumber(n,this.canvas.height),i=percentToNumber(i,this.canvas.width),this.originalArc(t,n,i,0,2*Math.PI)};