/*! 
 * canvas-v2.js 0.0.1 - 2022-02-10
 * Copyright (c) 2022 omar-sedki; Licensed MIT
 */
CanvasRenderingContext2D.prototype.originalRect=CanvasRenderingContext2D.prototype.rect,CanvasRenderingContext2D.prototype.originalArc=CanvasRenderingContext2D.prototype.arc,CanvasRenderingContext2D.prototype.originalMoveTo=CanvasRenderingContext2D.prototype.moveTo,CanvasRenderingContext2D.prototype.originalBeginPath=CanvasRenderingContext2D.prototype.beginPath,CanvasRenderingContext2D.prototype.originalLineTo=CanvasRenderingContext2D.prototype.lineTo,CanvasRenderingContext2D.prototype.originalClosePath=CanvasRenderingContext2D.prototype.closePath,CanvasRenderingContext2D.prototype.originalArcTo=CanvasRenderingContext2D.prototype.arcTo;class shape2D{constructor(t,n){this.points=t}createPath(t){t.beginPath(),t.moveTo(this.points[0].x,this.points[0].y);for(let n=1;n<this.points.length;n++)t.lineTo(this.points[n].x,this.points[n].y);t.closePath()}}class point{constructor(t,n){this.x=t,this.y=n}}class line{constructor(t,n){this.pointA=t,this.pointB=n}length(){return Math.sqrt(Math.pow(this.pointA.x-this.pointB.x,2)+Math.pow(this.pointA.y-this.pointB.y,2),2)}getPointOnLineDistanceFrom(t,n){var e={};return e.x=(this.pointA.x-this.pointB.x)*n/this.length(),e.y=(this.pointA.y-this.pointB.y)*n/this.length(),"A"==t&&(e.x=-1*e.x+pointA.x,e.y=-1*e.y+pointA.y),"B"==t&&(e.x+=pointB.x,e.y+=pointB.y),e}}function percentToNumber(t,n){return"string"==typeof t&&/\s*(\d+(?:\.\d+)?)\s*%\s*/.test(t)&&(t=Number(RegExp.$1)*n/100),t}const roundCorner=(t,n,e,i)=>{t.originalMoveTo(n.x,n.y),t.originalLineTo(e.x,e.y),t.originalLineTo(i.x,i.y)};CanvasRenderingContext2D.prototype.lineTo=function(t,n){this.originalLineTo(t,n),this._lastPoint={x:t,y:n}},CanvasRenderingContext2D.prototype.moveTo=function(t,n){this.originalMoveTo(t,n),this._lastPoint={x:t,y:n}},CanvasRenderingContext2D.prototype.square=function(t,n,e,i){t=percentToNumber(t,this.canvas.width),n=percentToNumber(n,this.canvas.height),e=percentToNumber(e,this.canvas.width);const o=[];o.push({x:t,y:n}),o.push({x:t+e,y:n}),o.push({x:t+e,y:n+e}),o.push({x:t,y:n+e}),new shape2D(o,i).createPath(this)},CanvasRenderingContext2D.prototype.triangle=function(t,n,e){triangle=new shape2D([t,n,e]),triangle.createPath(this)},CanvasRenderingContext2D.prototype.rect=function(t,n,e,i,o){if(t=percentToNumber(t,this.canvas.width),n=percentToNumber(n,this.canvas.height),e=percentToNumber(e,this.canvas.width),i=percentToNumber(i,this.canvas.height),o){var r=o.borderRadius?o.borderRadius:0,a={x:t,y:n},s={x:t+e,y:n},h={x:t+e,y:n+i},p={x:t,y:n+i};"number"==typeof r&&(a.r=r,s.r=r,h.r=r,p.r=r),"object"==typeof r&&2==r.length&&(a.r=r[0],s.r=r[1],h.r=r[0],p.r=r[1]),"object"==typeof r&&3==r.length&&(a.r=r[0],s.r=r[1],h.r=r[2],p.r=r[1]),"object"==typeof r&&4==r.length&&(a.r=r[0],s.r=r[1],h.r=r[2],p.r=r[3]);var c=ctx.lineCap;this.lineCap="square",this.originalMoveTo(a.x+a.r,a.y),this.originalLineTo(s.x-s.r,s.y),this.originalArcTo(s.x,s.y,s.x,s.y+s.r,s.r),this.originalLineTo(h.x,h.y-h.r),this.originalArcTo(h.x,h.y,h.x-h.r,h.y,h.r),this.originalLineTo(p.x+p.r,p.y),this.originalArcTo(p.x,p.y,p.x,p.y-p.r,p.r),this.originalLineTo(a.x,a.y+a.r),this.originalArcTo(a.x,a.y,a.x+a.r,a.y,a.r),this.lineCap=c}else this.originalRect(t,n,e,i)},CanvasRenderingContext2D.prototype.circle=function(t,n,e){t=percentToNumber(t,this.canvas.width),n=percentToNumber(n,this.canvas.height),e=percentToNumber(e,this.canvas.width),this.originalArc(t,n,e,0,2*Math.PI)};